Index.PACKAGES = {"heavybool" : [{"name" : "heavybool.AdditionModP", "shortDescription" : "", "members_class" : [{"label" : "suggestInverse", "tail" : "(a: Int): Option[Int]", "member" : "heavybool.AdditionModP.suggestInverse", "link" : "heavybool\/AdditionModP.html#suggestInverse(a:Int):Option[Int]", "kind" : "def"}, {"label" : "op", "tail" : "(a: Int, b: Int): Int", "member" : "heavybool.AdditionModP.op", "link" : "heavybool\/AdditionModP.html#op(a:Int,b:Int):Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "heavybool.AdditionModP.toString", "link" : "heavybool\/AdditionModP.html#toString():String", "kind" : "def"}, {"member" : "heavybool.AdditionModP#<init>", "error" : "unsupported entity"}, {"label" : "member", "tail" : "(a: Int): HeavyBool", "member" : "heavybool.ModP.member", "link" : "heavybool\/AdditionModP.html#member(a:Int):heavybool.HeavyBool", "kind" : "def"}, {"label" : "equiv", "tail" : "(a: Int, b: Int): HeavyBool", "member" : "heavybool.ModP.equiv", "link" : "heavybool\/AdditionModP.html#equiv(a:Int,b:Int):heavybool.HeavyBool", "kind" : "def"}, {"label" : "gen", "tail" : "(): List[Int]", "member" : "heavybool.ModP.gen", "link" : "heavybool\/AdditionModP.html#gen():List[Int]", "kind" : "def"}, {"label" : "isGroup", "tail" : "(z: Int, invert: (Int) => Option[Int]): HeavyBool", "member" : "heavybool.Magma.isGroup", "link" : "heavybool\/AdditionModP.html#isGroup(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isMonoid", "tail" : "(z: Int): HeavyBool", "member" : "heavybool.Magma.isMonoid", "link" : "heavybool\/AdditionModP.html#isMonoid(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isSemiGroup", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isSemiGroup", "link" : "heavybool\/AdditionModP.html#isSemiGroup():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isInverter", "tail" : "(z: Int, invert: (Int) => Option[Int]): HeavyBool", "member" : "heavybool.Magma.isInverter", "link" : "heavybool\/AdditionModP.html#isInverter(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "findInverse", "tail" : "(a: Int): Option[Int]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/AdditionModP.html#findInverse(a:T):Option[T]", "kind" : "def"}, {"label" : "findInverse", "tail" : "(z: Int, a: Int): Option[Int]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/AdditionModP.html#findInverse(z:T,a:T):Option[T]", "kind" : "def"}, {"label" : "findIdentity", "tail" : "(): Option[Int]", "member" : "heavybool.Magma.findIdentity", "link" : "heavybool\/AdditionModP.html#findIdentity():Option[T]", "kind" : "def"}, {"label" : "isIdentity", "tail" : "(z: Int): HeavyBool", "member" : "heavybool.Magma.isIdentity", "link" : "heavybool\/AdditionModP.html#isIdentity(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAbelian", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAbelian", "link" : "heavybool\/AdditionModP.html#isAbelian():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAssociative", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAssociative", "link" : "heavybool\/AdditionModP.html#isAssociative():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isClosed", "link" : "heavybool\/AdditionModP.html#isClosed():heavybool.HeavyBool", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/AdditionModP.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/AdditionModP.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/AdditionModP.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/AdditionModP.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/AdditionModP.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/AdditionModP.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/AdditionModP.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/AdditionModP.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/AdditionModP.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/AdditionModP.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/AdditionModP.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/AdditionModP.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/AdditionModP.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/AdditionModP.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/AdditionModP.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/AdditionModP.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/AdditionModP.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/AdditionModP.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "heavybool\/AdditionModP.html", "kind" : "class"}, {"name" : "heavybool.GaussianIntModP", "shortDescription" : "", "members_class" : [{"label" : "member", "tail" : "(a: (Int, Int)): HeavyBool", "member" : "heavybool.GaussianIntModP.member", "link" : "heavybool\/GaussianIntModP.html#member(a:(Int,Int)):heavybool.HeavyBool", "kind" : "def"}, {"label" : "equiv", "tail" : "(a: (Int, Int), b: (Int, Int)): HeavyBool", "member" : "heavybool.GaussianIntModP.equiv", "link" : "heavybool\/GaussianIntModP.html#equiv(a:(Int,Int),b:(Int,Int)):heavybool.HeavyBool", "kind" : "def"}, {"label" : "op", "tail" : "(a: (Int, Int), b: (Int, Int)): (Int, Int)", "member" : "heavybool.GaussianIntModP.op", "link" : "heavybool\/GaussianIntModP.html#op(a:(Int,Int),b:(Int,Int)):(Int,Int)", "kind" : "def"}, {"label" : "mult_inv", "tail" : "(ab: (Int, Int)): Option[(Int, Int)]", "member" : "heavybool.GaussianIntModP.mult_inv", "link" : "heavybool\/GaussianIntModP.html#mult_inv(ab:(Int,Int)):Option[(Int,Int)]", "kind" : "def"}, {"label" : "mult", "tail" : "(a: (Int, Int), b: (Int, Int)): (Int, Int)", "member" : "heavybool.GaussianIntModP.mult", "link" : "heavybool\/GaussianIntModP.html#mult(a:(Int,Int),b:(Int,Int)):(Int,Int)", "kind" : "def"}, {"label" : "subtract", "tail" : "(a: (Int, Int), b: (Int, Int)): (Int, Int)", "member" : "heavybool.GaussianIntModP.subtract", "link" : "heavybool\/GaussianIntModP.html#subtract(a:(Int,Int),b:(Int,Int)):(Int,Int)", "kind" : "def"}, {"label" : "add", "tail" : "(a: (Int, Int), b: (Int, Int)): (Int, Int)", "member" : "heavybool.GaussianIntModP.add", "link" : "heavybool\/GaussianIntModP.html#add(a:(Int,Int),b:(Int,Int)):(Int,Int)", "kind" : "def"}, {"label" : "mod2", "tail" : "(a: Int, b: Int): (Int, Int)", "member" : "heavybool.GaussianIntModP.mod2", "link" : "heavybool\/GaussianIntModP.html#mod2(a:Int,b:Int):(Int,Int)", "kind" : "def"}, {"label" : "mod", "tail" : "(a: Int): Int", "member" : "heavybool.GaussianIntModP.mod", "link" : "heavybool\/GaussianIntModP.html#mod(a:Int):Int", "kind" : "def"}, {"label" : "gen", "tail" : "(): LazyList[(Int, Int)]", "member" : "heavybool.GaussianIntModP.gen", "link" : "heavybool\/GaussianIntModP.html#gen():LazyList[(Int,Int)]", "kind" : "def"}, {"label" : "one", "tail" : ": (Int, Int)", "member" : "heavybool.GaussianIntModP.one", "link" : "heavybool\/GaussianIntModP.html#one:(Int,Int)", "kind" : "val"}, {"label" : "zero", "tail" : ": (Int, Int)", "member" : "heavybool.GaussianIntModP.zero", "link" : "heavybool\/GaussianIntModP.html#zero:(Int,Int)", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "heavybool.GaussianIntModP.toString", "link" : "heavybool\/GaussianIntModP.html#toString():String", "kind" : "def"}, {"member" : "heavybool.GaussianIntModP#<init>", "error" : "unsupported entity"}, {"label" : "isGroup", "tail" : "(z: (Int, Int), invert: ((Int, Int)) => Option[(Int, Int)]): HeavyBool", "member" : "heavybool.Magma.isGroup", "link" : "heavybool\/GaussianIntModP.html#isGroup(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isMonoid", "tail" : "(z: (Int, Int)): HeavyBool", "member" : "heavybool.Magma.isMonoid", "link" : "heavybool\/GaussianIntModP.html#isMonoid(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isSemiGroup", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isSemiGroup", "link" : "heavybool\/GaussianIntModP.html#isSemiGroup():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isInverter", "tail" : "(z: (Int, Int), invert: ((Int, Int)) => Option[(Int, Int)]): HeavyBool", "member" : "heavybool.Magma.isInverter", "link" : "heavybool\/GaussianIntModP.html#isInverter(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "findInverse", "tail" : "(a: (Int, Int)): Option[(Int, Int)]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/GaussianIntModP.html#findInverse(a:T):Option[T]", "kind" : "def"}, {"label" : "findInverse", "tail" : "(z: (Int, Int), a: (Int, Int)): Option[(Int, Int)]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/GaussianIntModP.html#findInverse(z:T,a:T):Option[T]", "kind" : "def"}, {"label" : "findIdentity", "tail" : "(): Option[(Int, Int)]", "member" : "heavybool.Magma.findIdentity", "link" : "heavybool\/GaussianIntModP.html#findIdentity():Option[T]", "kind" : "def"}, {"label" : "isIdentity", "tail" : "(z: (Int, Int)): HeavyBool", "member" : "heavybool.Magma.isIdentity", "link" : "heavybool\/GaussianIntModP.html#isIdentity(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAbelian", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAbelian", "link" : "heavybool\/GaussianIntModP.html#isAbelian():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAssociative", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAssociative", "link" : "heavybool\/GaussianIntModP.html#isAssociative():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isClosed", "link" : "heavybool\/GaussianIntModP.html#isClosed():heavybool.HeavyBool", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/GaussianIntModP.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/GaussianIntModP.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/GaussianIntModP.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/GaussianIntModP.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/GaussianIntModP.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/GaussianIntModP.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/GaussianIntModP.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/GaussianIntModP.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/GaussianIntModP.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/GaussianIntModP.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/GaussianIntModP.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/GaussianIntModP.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/GaussianIntModP.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/GaussianIntModP.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/GaussianIntModP.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/GaussianIntModP.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/GaussianIntModP.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/GaussianIntModP.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "heavybool\/GaussianIntModP.html", "kind" : "class"}, {"name" : "heavybool.HbImplicits", "shortDescription" : "", "object" : "heavybool\/HbImplicits$.html", "members_object" : [{"label" : "HeavyBoolToBool", "tail" : "(raw: HeavyBool): Boolean", "member" : "heavybool.HbImplicits.HeavyBoolToBool", "link" : "heavybool\/HbImplicits$.html#HeavyBoolToBool(raw:heavybool.HeavyBool):Boolean", "kind" : "implicit def"}, {"label" : "boolToHeavyBool", "tail" : "(raw: Boolean): HeavyBool", "member" : "heavybool.HbImplicits.boolToHeavyBool", "link" : "heavybool\/HbImplicits$.html#boolToHeavyBool(raw:Boolean):heavybool.HeavyBool", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/HbImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/HbImplicits$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/HbImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/HbImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/HbImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/HbImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/HbImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HbImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HbImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HbImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/HbImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/HbImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "heavybool\/HbImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/HbImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/HbImplicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/HbImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/HbImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/HbImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/HbImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "heavybool.HeavyBool", "shortDescription" : "Represents true-because or false-because.", "object" : "heavybool\/HeavyBool$.html", "members_class" : [{"label" : "conjFalse", "tail" : "(another: Map[String, Any]): HeavyBool", "member" : "heavybool.HeavyBool.conjFalse", "link" : "heavybool\/HeavyBool.html#conjFalse(another:Map[String,Any]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "conjTrue", "tail" : "(another: Map[String, Any]): HeavyBool", "member" : "heavybool.HeavyBool.conjTrue", "link" : "heavybool\/HeavyBool.html#conjTrue(another:Map[String,Any]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "tag", "tail" : "(reason: String): HeavyBool", "member" : "heavybool.HeavyBool.tag", "link" : "heavybool\/HeavyBool.html#tag(reason:String):heavybool.HeavyBool", "kind" : "def"}, {"label" : "+|", "tail" : "(reason: String): HeavyBool", "member" : "heavybool.HeavyBool.+|", "link" : "heavybool\/HeavyBool.html#+|(reason:String):heavybool.HeavyBool", "kind" : "def"}, {"label" : "++", "tail" : "(any: Map[String, Any]): HeavyBool", "member" : "heavybool.HeavyBool.++", "link" : "heavybool\/HeavyBool.html#++(any:Map[String,Any]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "<==>", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.<==>", "link" : "heavybool\/HeavyBool.html#<==>(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "<==", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.<==", "link" : "heavybool\/HeavyBool.html#<==(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "==>", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.==>", "link" : "heavybool\/HeavyBool.html#==>(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): HeavyBool", "member" : "heavybool.HeavyBool.unary_!", "link" : "heavybool\/HeavyBool.html#unary_!:heavybool.HeavyBool", "kind" : "def"}, {"label" : "&&", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.&&", "link" : "heavybool\/HeavyBool.html#&&(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "||", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.||", "link" : "heavybool\/HeavyBool.html#||(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "toBoolean", "tail" : ": Boolean", "member" : "heavybool.HeavyBool.toBoolean", "link" : "heavybool\/HeavyBool.html#toBoolean:Boolean", "kind" : "val"}, {"label" : "findWitness", "tail" : "(tag: String): Option[Any]", "member" : "heavybool.HeavyBool.findWitness", "link" : "heavybool\/HeavyBool.html#findWitness(tag:String):Option[Any]", "kind" : "def"}, {"label" : "witness", "tail" : ": Option[Any]", "member" : "heavybool.HeavyBool.witness", "link" : "heavybool\/HeavyBool.html#witness:Option[Any]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "heavybool.HeavyBool.toString", "link" : "heavybool\/HeavyBool.html#toString():String", "kind" : "def"}, {"label" : "because", "tail" : ": Reason", "member" : "heavybool.HeavyBool.because", "link" : "heavybool\/HeavyBool.html#because:heavybool.HeavyBool.Reason", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/HeavyBool.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/HeavyBool.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/HeavyBool.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/HeavyBool.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/HeavyBool.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/HeavyBool.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/HeavyBool.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyBool.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyBool.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyBool.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/HeavyBool.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/HeavyBool.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/HeavyBool.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/HeavyBool.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/HeavyBool.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/HeavyBool.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/HeavyBool.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/HeavyBool.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "heavybool.HeavyBool.main", "link" : "heavybool\/HeavyBool$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "assertM", "tail" : "(a: HeavyBool): Unit", "member" : "heavybool.HeavyBool.assertM", "link" : "heavybool\/HeavyBool$.html#assertM(a:heavybool.HeavyBool):Unit", "kind" : "def"}, {"label" : "existsM", "tail" : "(tag: String, items: C[T])(p: (T) => HeavyBool)(arg0: Foldable[C]): HeavyBool", "member" : "heavybool.HeavyBool.existsM", "link" : "heavybool\/HeavyBool$.html#existsM[T,C[_]](tag:String,items:C[T])(p:T=>heavybool.HeavyBool)(implicitevidence$2:cats.Foldable[C]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "existsM", "tail" : "(tag: String, items: Range)(p: (Int) => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.existsM", "link" : "heavybool\/HeavyBool$.html#existsM(tag:String,items:Range)(p:Int=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "forallM", "tail" : "(tag: String, items: C[T])(p: (T) => HeavyBool)(arg0: Foldable[C]): HeavyBool", "member" : "heavybool.HeavyBool.forallM", "link" : "heavybool\/HeavyBool$.html#forallM[T,C[_]](tag:String,items:C[T])(p:T=>heavybool.HeavyBool)(implicitevidence$1:cats.Foldable[C]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "forallM", "tail" : "(tag: String, items: Range)(p: (Int) => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.forallM", "link" : "heavybool\/HeavyBool$.html#forallM(tag:String,items:Range)(p:Int=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "apply", "tail" : "(test: Boolean, because: Reason): HeavyBool", "member" : "heavybool.HeavyBool.apply", "link" : "heavybool\/HeavyBool$.html#apply(test:Boolean,because:heavybool.HeavyBool.Reason):heavybool.HeavyBool", "kind" : "def"}, {"label" : "apply", "tail" : "(x: Boolean): HeavyBool", "member" : "heavybool.HeavyBool.apply", "link" : "heavybool\/HeavyBool$.html#apply(x:Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "HFalse", "tail" : ": HeavyFalse", "member" : "heavybool.HeavyBool.HFalse", "link" : "heavybool\/HeavyBool$.html#HFalse:heavybool.HeavyFalse", "kind" : "val"}, {"label" : "HTrue", "tail" : ": HeavyTrue", "member" : "heavybool.HeavyBool.HTrue", "link" : "heavybool\/HeavyBool$.html#HTrue:heavybool.HeavyTrue", "kind" : "val"}, {"label" : "Reason", "tail" : "", "member" : "heavybool.HeavyBool.Reason", "link" : "heavybool\/HeavyBool$.html#Reason=List[Map[String,Any]]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/HeavyBool$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/HeavyBool$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/HeavyBool$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/HeavyBool$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/HeavyBool$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/HeavyBool$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/HeavyBool$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyBool$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyBool$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyBool$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/HeavyBool$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/HeavyBool$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "heavybool\/HeavyBool$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/HeavyBool$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/HeavyBool$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/HeavyBool$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/HeavyBool$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/HeavyBool$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/HeavyBool$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "heavybool\/HeavyBool.html", "kind" : "class"}, {"name" : "heavybool.HeavyFalse", "shortDescription" : "", "members_case class" : [{"member" : "heavybool.HeavyFalse#<init>", "error" : "unsupported entity"}, {"label" : "because", "tail" : ": Reason", "member" : "heavybool.HeavyFalse.because", "link" : "heavybool\/HeavyFalse.html#because:heavybool.HeavyBool.Reason", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "heavybool\/HeavyFalse.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "conjFalse", "tail" : "(another: Map[String, Any]): HeavyBool", "member" : "heavybool.HeavyBool.conjFalse", "link" : "heavybool\/HeavyFalse.html#conjFalse(another:Map[String,Any]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "conjTrue", "tail" : "(another: Map[String, Any]): HeavyBool", "member" : "heavybool.HeavyBool.conjTrue", "link" : "heavybool\/HeavyFalse.html#conjTrue(another:Map[String,Any]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "tag", "tail" : "(reason: String): HeavyBool", "member" : "heavybool.HeavyBool.tag", "link" : "heavybool\/HeavyFalse.html#tag(reason:String):heavybool.HeavyBool", "kind" : "def"}, {"label" : "+|", "tail" : "(reason: String): HeavyBool", "member" : "heavybool.HeavyBool.+|", "link" : "heavybool\/HeavyFalse.html#+|(reason:String):heavybool.HeavyBool", "kind" : "def"}, {"label" : "++", "tail" : "(any: Map[String, Any]): HeavyBool", "member" : "heavybool.HeavyBool.++", "link" : "heavybool\/HeavyFalse.html#++(any:Map[String,Any]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "<==>", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.<==>", "link" : "heavybool\/HeavyFalse.html#<==>(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "<==", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.<==", "link" : "heavybool\/HeavyFalse.html#<==(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "==>", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.==>", "link" : "heavybool\/HeavyFalse.html#==>(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): HeavyBool", "member" : "heavybool.HeavyBool.unary_!", "link" : "heavybool\/HeavyFalse.html#unary_!:heavybool.HeavyBool", "kind" : "def"}, {"label" : "&&", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.&&", "link" : "heavybool\/HeavyFalse.html#&&(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "||", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.||", "link" : "heavybool\/HeavyFalse.html#||(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "toBoolean", "tail" : ": Boolean", "member" : "heavybool.HeavyBool.toBoolean", "link" : "heavybool\/HeavyFalse.html#toBoolean:Boolean", "kind" : "val"}, {"label" : "findWitness", "tail" : "(tag: String): Option[Any]", "member" : "heavybool.HeavyBool.findWitness", "link" : "heavybool\/HeavyFalse.html#findWitness(tag:String):Option[Any]", "kind" : "def"}, {"label" : "witness", "tail" : ": Option[Any]", "member" : "heavybool.HeavyBool.witness", "link" : "heavybool\/HeavyFalse.html#witness:Option[Any]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "heavybool.HeavyBool.toString", "link" : "heavybool\/HeavyFalse.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/HeavyFalse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/HeavyFalse.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/HeavyFalse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/HeavyFalse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/HeavyFalse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/HeavyFalse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/HeavyFalse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyFalse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyFalse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyFalse.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/HeavyFalse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/HeavyFalse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/HeavyFalse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/HeavyFalse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/HeavyFalse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/HeavyFalse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "heavybool\/HeavyFalse.html", "kind" : "case class"}, {"name" : "heavybool.HeavyTrue", "shortDescription" : "", "members_case class" : [{"member" : "heavybool.HeavyTrue#<init>", "error" : "unsupported entity"}, {"label" : "because", "tail" : ": Reason", "member" : "heavybool.HeavyTrue.because", "link" : "heavybool\/HeavyTrue.html#because:heavybool.HeavyBool.Reason", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "heavybool\/HeavyTrue.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "conjFalse", "tail" : "(another: Map[String, Any]): HeavyBool", "member" : "heavybool.HeavyBool.conjFalse", "link" : "heavybool\/HeavyTrue.html#conjFalse(another:Map[String,Any]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "conjTrue", "tail" : "(another: Map[String, Any]): HeavyBool", "member" : "heavybool.HeavyBool.conjTrue", "link" : "heavybool\/HeavyTrue.html#conjTrue(another:Map[String,Any]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "tag", "tail" : "(reason: String): HeavyBool", "member" : "heavybool.HeavyBool.tag", "link" : "heavybool\/HeavyTrue.html#tag(reason:String):heavybool.HeavyBool", "kind" : "def"}, {"label" : "+|", "tail" : "(reason: String): HeavyBool", "member" : "heavybool.HeavyBool.+|", "link" : "heavybool\/HeavyTrue.html#+|(reason:String):heavybool.HeavyBool", "kind" : "def"}, {"label" : "++", "tail" : "(any: Map[String, Any]): HeavyBool", "member" : "heavybool.HeavyBool.++", "link" : "heavybool\/HeavyTrue.html#++(any:Map[String,Any]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "<==>", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.<==>", "link" : "heavybool\/HeavyTrue.html#<==>(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "<==", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.<==", "link" : "heavybool\/HeavyTrue.html#<==(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "==>", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.==>", "link" : "heavybool\/HeavyTrue.html#==>(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): HeavyBool", "member" : "heavybool.HeavyBool.unary_!", "link" : "heavybool\/HeavyTrue.html#unary_!:heavybool.HeavyBool", "kind" : "def"}, {"label" : "&&", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.&&", "link" : "heavybool\/HeavyTrue.html#&&(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "||", "tail" : "(that: => HeavyBool): HeavyBool", "member" : "heavybool.HeavyBool.||", "link" : "heavybool\/HeavyTrue.html#||(that:=>heavybool.HeavyBool):heavybool.HeavyBool", "kind" : "def"}, {"label" : "toBoolean", "tail" : ": Boolean", "member" : "heavybool.HeavyBool.toBoolean", "link" : "heavybool\/HeavyTrue.html#toBoolean:Boolean", "kind" : "val"}, {"label" : "findWitness", "tail" : "(tag: String): Option[Any]", "member" : "heavybool.HeavyBool.findWitness", "link" : "heavybool\/HeavyTrue.html#findWitness(tag:String):Option[Any]", "kind" : "def"}, {"label" : "witness", "tail" : ": Option[Any]", "member" : "heavybool.HeavyBool.witness", "link" : "heavybool\/HeavyTrue.html#witness:Option[Any]", "kind" : "lazy val"}, {"label" : "toString", "tail" : "(): String", "member" : "heavybool.HeavyBool.toString", "link" : "heavybool\/HeavyTrue.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/HeavyTrue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/HeavyTrue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/HeavyTrue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/HeavyTrue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/HeavyTrue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/HeavyTrue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/HeavyTrue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyTrue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyTrue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/HeavyTrue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/HeavyTrue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/HeavyTrue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/HeavyTrue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/HeavyTrue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/HeavyTrue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/HeavyTrue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "heavybool\/HeavyTrue.html", "kind" : "case class"}, {"name" : "heavybool.Magma", "shortDescription" : "", "object" : "heavybool\/Magma$.html", "members_class" : [{"label" : "isGroup", "tail" : "(z: T, invert: (T) => Option[T]): HeavyBool", "member" : "heavybool.Magma.isGroup", "link" : "heavybool\/Magma.html#isGroup(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isMonoid", "tail" : "(z: T): HeavyBool", "member" : "heavybool.Magma.isMonoid", "link" : "heavybool\/Magma.html#isMonoid(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isSemiGroup", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isSemiGroup", "link" : "heavybool\/Magma.html#isSemiGroup():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isInverter", "tail" : "(z: T, invert: (T) => Option[T]): HeavyBool", "member" : "heavybool.Magma.isInverter", "link" : "heavybool\/Magma.html#isInverter(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "findInverse", "tail" : "(a: T): Option[T]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/Magma.html#findInverse(a:T):Option[T]", "kind" : "def"}, {"label" : "findInverse", "tail" : "(z: T, a: T): Option[T]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/Magma.html#findInverse(z:T,a:T):Option[T]", "kind" : "def"}, {"label" : "findIdentity", "tail" : "(): Option[T]", "member" : "heavybool.Magma.findIdentity", "link" : "heavybool\/Magma.html#findIdentity():Option[T]", "kind" : "def"}, {"label" : "isIdentity", "tail" : "(z: T): HeavyBool", "member" : "heavybool.Magma.isIdentity", "link" : "heavybool\/Magma.html#isIdentity(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAbelian", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAbelian", "link" : "heavybool\/Magma.html#isAbelian():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAssociative", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAssociative", "link" : "heavybool\/Magma.html#isAssociative():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isClosed", "link" : "heavybool\/Magma.html#isClosed():heavybool.HeavyBool", "kind" : "def"}, {"label" : "equiv", "tail" : "(a: T, b: T): HeavyBool", "member" : "heavybool.Magma.equiv", "link" : "heavybool\/Magma.html#equiv(a:T,b:T):heavybool.HeavyBool", "kind" : "def"}, {"member" : "heavybool.Magma#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/Magma.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/Magma.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/Magma.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/Magma.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/Magma.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/Magma.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/Magma.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/Magma.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/Magma.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/Magma.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/Magma.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/Magma.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "heavybool\/Magma.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/Magma.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/Magma.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/Magma.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/Magma.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/Magma.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/Magma.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "member", "tail" : "(a: T): HeavyBool", "member" : "heavybool.Magma.member", "link" : "heavybool\/Magma.html#member(a:T):heavybool.HeavyBool", "kind" : "abstract def"}, {"label" : "op", "tail" : "(a: T, b: T): T", "member" : "heavybool.Magma.op", "link" : "heavybool\/Magma.html#op(a:T,b:T):T", "kind" : "abstract def"}, {"label" : "gen", "tail" : "(): C[T]", "member" : "heavybool.Magma.gen", "link" : "heavybool\/Magma.html#gen():C[T]", "kind" : "abstract def"}], "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "heavybool.Magma.main", "link" : "heavybool\/Magma$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "isField", "tail" : "(gen: () => C[T], member: (T) => HeavyBool, add: (T, T) => T, mult: (T, T) => T, add_invert: (T) => Option[T], mult_invert: (T) => Option[T], one: T, zero: T)(arg0: Foldable[C]): HeavyBool", "member" : "heavybool.Magma.isField", "link" : "heavybool\/Magma$.html#isField[T,C[_]](gen:()=>C[T],member:T=>heavybool.HeavyBool,add:(T,T)=>T,mult:(T,T)=>T,add_invert:T=>Option[T],mult_invert:T=>Option[T],one:T,zero:T)(implicitevidence$3:cats.Foldable[C]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isRing", "tail" : "(gen: () => C[T], member: (T) => HeavyBool, add: (T, T) => T, mult: (T, T) => T, invert: (T) => Option[T], one: T, zero: T)(arg0: Foldable[C]): HeavyBool", "member" : "heavybool.Magma.isRing", "link" : "heavybool\/Magma$.html#isRing[T,C[_]](gen:()=>C[T],member:T=>heavybool.HeavyBool,add:(T,T)=>T,mult:(T,T)=>T,invert:T=>Option[T],one:T,zero:T)(implicitevidence$2:cats.Foldable[C]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "findGroupsM", "tail" : "(n: Int): Unit", "member" : "heavybool.Magma.findGroupsM", "link" : "heavybool\/Magma$.html#findGroupsM(n:Int):Unit", "kind" : "def"}, {"label" : "countGroups", "tail" : "(n: Int): Unit", "member" : "heavybool.Magma.countGroups", "link" : "heavybool\/Magma$.html#countGroups(n:Int):Unit", "kind" : "def"}, {"label" : "allCayleyTables", "tail" : "(n: Int): LazyList[(Int, Int) => Int]", "member" : "heavybool.Magma.allCayleyTables", "link" : "heavybool\/Magma$.html#allCayleyTables(n:Int):LazyList[(Int,Int)=>Int]", "kind" : "def"}, {"label" : "allUnitalCayleyTables", "tail" : "(n: Int): LazyList[(Int, Int) => Int]", "member" : "heavybool.Magma.allUnitalCayleyTables", "link" : "heavybool\/Magma$.html#allUnitalCayleyTables(n:Int):LazyList[(Int,Int)=>Int]", "kind" : "def"}, {"label" : "randomCayleyTables", "tail" : "(n: Int): LazyList[(Int, Int) => Int]", "member" : "heavybool.Magma.randomCayleyTables", "link" : "heavybool\/Magma$.html#randomCayleyTables(n:Int):LazyList[(Int,Int)=>Int]", "kind" : "def"}, {"label" : "randomCayleyTable", "tail" : "(n: Int): (Int, Int) => Int", "member" : "heavybool.Magma.randomCayleyTable", "link" : "heavybool\/Magma$.html#randomCayleyTable(n:Int):(Int,Int)=>Int", "kind" : "def"}, {"label" : "cayleyTable", "tail" : "(elements: Seq[T], op: (T, T) => T): String", "member" : "heavybool.Magma.cayleyTable", "link" : "heavybool\/Magma$.html#cayleyTable[T](elements:Seq[T],op:(T,T)=>T):String", "kind" : "def"}, {"label" : "genListFinite", "tail" : "(n: Int): List[Int]", "member" : "heavybool.Magma.genListFinite", "link" : "heavybool\/Magma$.html#genListFinite(n:Int):List[Int]", "kind" : "def"}, {"label" : "genLazyFinite", "tail" : "(n: Int): LazyList[Int]", "member" : "heavybool.Magma.genLazyFinite", "link" : "heavybool\/Magma$.html#genLazyFinite(n:Int):LazyList[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/Magma$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/Magma$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/Magma$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/Magma$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/Magma$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/Magma$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/Magma$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/Magma$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/Magma$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/Magma$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/Magma$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/Magma$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "heavybool\/Magma$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/Magma$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/Magma$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/Magma$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/Magma$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/Magma$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/Magma$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "heavybool\/Magma.html", "kind" : "class"}, {"name" : "heavybool.ModP", "shortDescription" : "", "members_class" : [{"label" : "member", "tail" : "(a: Int): HeavyBool", "member" : "heavybool.ModP.member", "link" : "heavybool\/ModP.html#member(a:Int):heavybool.HeavyBool", "kind" : "def"}, {"label" : "equiv", "tail" : "(a: Int, b: Int): HeavyBool", "member" : "heavybool.ModP.equiv", "link" : "heavybool\/ModP.html#equiv(a:Int,b:Int):heavybool.HeavyBool", "kind" : "def"}, {"label" : "gen", "tail" : "(): List[Int]", "member" : "heavybool.ModP.gen", "link" : "heavybool\/ModP.html#gen():List[Int]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "heavybool.ModP.toString", "link" : "heavybool\/ModP.html#toString():String", "kind" : "def"}, {"member" : "heavybool.ModP#<init>", "error" : "unsupported entity"}, {"label" : "isGroup", "tail" : "(z: Int, invert: (Int) => Option[Int]): HeavyBool", "member" : "heavybool.Magma.isGroup", "link" : "heavybool\/ModP.html#isGroup(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isMonoid", "tail" : "(z: Int): HeavyBool", "member" : "heavybool.Magma.isMonoid", "link" : "heavybool\/ModP.html#isMonoid(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isSemiGroup", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isSemiGroup", "link" : "heavybool\/ModP.html#isSemiGroup():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isInverter", "tail" : "(z: Int, invert: (Int) => Option[Int]): HeavyBool", "member" : "heavybool.Magma.isInverter", "link" : "heavybool\/ModP.html#isInverter(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "findInverse", "tail" : "(a: Int): Option[Int]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/ModP.html#findInverse(a:T):Option[T]", "kind" : "def"}, {"label" : "findInverse", "tail" : "(z: Int, a: Int): Option[Int]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/ModP.html#findInverse(z:T,a:T):Option[T]", "kind" : "def"}, {"label" : "findIdentity", "tail" : "(): Option[Int]", "member" : "heavybool.Magma.findIdentity", "link" : "heavybool\/ModP.html#findIdentity():Option[T]", "kind" : "def"}, {"label" : "isIdentity", "tail" : "(z: Int): HeavyBool", "member" : "heavybool.Magma.isIdentity", "link" : "heavybool\/ModP.html#isIdentity(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAbelian", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAbelian", "link" : "heavybool\/ModP.html#isAbelian():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAssociative", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAssociative", "link" : "heavybool\/ModP.html#isAssociative():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isClosed", "link" : "heavybool\/ModP.html#isClosed():heavybool.HeavyBool", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/ModP.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/ModP.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/ModP.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/ModP.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/ModP.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/ModP.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/ModP.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/ModP.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/ModP.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/ModP.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/ModP.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/ModP.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/ModP.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/ModP.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/ModP.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/ModP.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/ModP.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/ModP.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "op", "tail" : "(a: Int, b: Int): Int", "member" : "heavybool.Magma.op", "link" : "heavybool\/ModP.html#op(a:T,b:T):T", "kind" : "abstract def"}], "class" : "heavybool\/ModP.html", "kind" : "class"}, {"name" : "heavybool.MultiplicationModP", "shortDescription" : "", "members_class" : [{"label" : "op", "tail" : "(a: Int, b: Int): Int", "member" : "heavybool.MultiplicationModP.op", "link" : "heavybool\/MultiplicationModP.html#op(a:Int,b:Int):Int", "kind" : "def"}, {"label" : "member", "tail" : "(a: Int): HeavyBool", "member" : "heavybool.MultiplicationModP.member", "link" : "heavybool\/MultiplicationModP.html#member(a:Int):heavybool.HeavyBool", "kind" : "def"}, {"label" : "gen", "tail" : "(): List[Int]", "member" : "heavybool.MultiplicationModP.gen", "link" : "heavybool\/MultiplicationModP.html#gen():List[Int]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "heavybool.MultiplicationModP.toString", "link" : "heavybool\/MultiplicationModP.html#toString():String", "kind" : "def"}, {"member" : "heavybool.MultiplicationModP#<init>", "error" : "unsupported entity"}, {"label" : "equiv", "tail" : "(a: Int, b: Int): HeavyBool", "member" : "heavybool.ModP.equiv", "link" : "heavybool\/MultiplicationModP.html#equiv(a:Int,b:Int):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isGroup", "tail" : "(z: Int, invert: (Int) => Option[Int]): HeavyBool", "member" : "heavybool.Magma.isGroup", "link" : "heavybool\/MultiplicationModP.html#isGroup(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isMonoid", "tail" : "(z: Int): HeavyBool", "member" : "heavybool.Magma.isMonoid", "link" : "heavybool\/MultiplicationModP.html#isMonoid(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isSemiGroup", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isSemiGroup", "link" : "heavybool\/MultiplicationModP.html#isSemiGroup():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isInverter", "tail" : "(z: Int, invert: (Int) => Option[Int]): HeavyBool", "member" : "heavybool.Magma.isInverter", "link" : "heavybool\/MultiplicationModP.html#isInverter(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "findInverse", "tail" : "(a: Int): Option[Int]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/MultiplicationModP.html#findInverse(a:T):Option[T]", "kind" : "def"}, {"label" : "findInverse", "tail" : "(z: Int, a: Int): Option[Int]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/MultiplicationModP.html#findInverse(z:T,a:T):Option[T]", "kind" : "def"}, {"label" : "findIdentity", "tail" : "(): Option[Int]", "member" : "heavybool.Magma.findIdentity", "link" : "heavybool\/MultiplicationModP.html#findIdentity():Option[T]", "kind" : "def"}, {"label" : "isIdentity", "tail" : "(z: Int): HeavyBool", "member" : "heavybool.Magma.isIdentity", "link" : "heavybool\/MultiplicationModP.html#isIdentity(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAbelian", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAbelian", "link" : "heavybool\/MultiplicationModP.html#isAbelian():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAssociative", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAssociative", "link" : "heavybool\/MultiplicationModP.html#isAssociative():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isClosed", "link" : "heavybool\/MultiplicationModP.html#isClosed():heavybool.HeavyBool", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/MultiplicationModP.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/MultiplicationModP.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/MultiplicationModP.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/MultiplicationModP.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/MultiplicationModP.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/MultiplicationModP.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/MultiplicationModP.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/MultiplicationModP.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/MultiplicationModP.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/MultiplicationModP.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/MultiplicationModP.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/MultiplicationModP.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/MultiplicationModP.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/MultiplicationModP.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/MultiplicationModP.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/MultiplicationModP.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/MultiplicationModP.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/MultiplicationModP.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "heavybool\/MultiplicationModP.html", "kind" : "class"}, {"name" : "heavybool.testGaussianInt", "shortDescription" : "", "object" : "heavybool\/testGaussianInt$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "heavybool.testGaussianInt.main", "link" : "heavybool\/testGaussianInt$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/testGaussianInt$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/testGaussianInt$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/testGaussianInt$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/testGaussianInt$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/testGaussianInt$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/testGaussianInt$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/testGaussianInt$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/testGaussianInt$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/testGaussianInt$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/testGaussianInt$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/testGaussianInt$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/testGaussianInt$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "heavybool\/testGaussianInt$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/testGaussianInt$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/testGaussianInt$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/testGaussianInt$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/testGaussianInt$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/testGaussianInt$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/testGaussianInt$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "heavybool.examples" : [{"name" : "heavybool.examples.DynMagma", "shortDescription" : "", "members_case class" : [{"label" : "member", "tail" : "(a: T): HeavyBool", "member" : "heavybool.examples.DynMagma.member", "link" : "heavybool\/examples\/DynMagma.html#member(a:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "op", "tail" : "(a: T, b: T): T", "member" : "heavybool.examples.DynMagma.op", "link" : "heavybool\/examples\/DynMagma.html#op(a:T,b:T):T", "kind" : "def"}, {"label" : "gen", "tail" : "(): C[T]", "member" : "heavybool.examples.DynMagma.gen", "link" : "heavybool\/examples\/DynMagma.html#gen():C[T]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "heavybool.examples.DynMagma.toString", "link" : "heavybool\/examples\/DynMagma.html#toString():String", "kind" : "def"}, {"member" : "heavybool.examples.DynMagma#<init>", "error" : "unsupported entity"}, {"label" : "member1", "tail" : ": (T) => Boolean", "member" : "heavybool.examples.DynMagma.member1", "link" : "heavybool\/examples\/DynMagma.html#member1:T=>Boolean", "kind" : "val"}, {"label" : "op1", "tail" : ": (T, T) => T", "member" : "heavybool.examples.DynMagma.op1", "link" : "heavybool\/examples\/DynMagma.html#op1:(T,T)=>T", "kind" : "val"}, {"label" : "gen1", "tail" : ": () => C[T]", "member" : "heavybool.examples.DynMagma.gen1", "link" : "heavybool\/examples\/DynMagma.html#gen1:()=>C[T]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "heavybool\/examples\/DynMagma.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "isGroup", "tail" : "(z: T, invert: (T) => Option[T]): HeavyBool", "member" : "heavybool.Magma.isGroup", "link" : "heavybool\/examples\/DynMagma.html#isGroup(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isMonoid", "tail" : "(z: T): HeavyBool", "member" : "heavybool.Magma.isMonoid", "link" : "heavybool\/examples\/DynMagma.html#isMonoid(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isSemiGroup", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isSemiGroup", "link" : "heavybool\/examples\/DynMagma.html#isSemiGroup():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isInverter", "tail" : "(z: T, invert: (T) => Option[T]): HeavyBool", "member" : "heavybool.Magma.isInverter", "link" : "heavybool\/examples\/DynMagma.html#isInverter(z:T,invert:T=>Option[T]):heavybool.HeavyBool", "kind" : "def"}, {"label" : "findInverse", "tail" : "(a: T): Option[T]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/examples\/DynMagma.html#findInverse(a:T):Option[T]", "kind" : "def"}, {"label" : "findInverse", "tail" : "(z: T, a: T): Option[T]", "member" : "heavybool.Magma.findInverse", "link" : "heavybool\/examples\/DynMagma.html#findInverse(z:T,a:T):Option[T]", "kind" : "def"}, {"label" : "findIdentity", "tail" : "(): Option[T]", "member" : "heavybool.Magma.findIdentity", "link" : "heavybool\/examples\/DynMagma.html#findIdentity():Option[T]", "kind" : "def"}, {"label" : "isIdentity", "tail" : "(z: T): HeavyBool", "member" : "heavybool.Magma.isIdentity", "link" : "heavybool\/examples\/DynMagma.html#isIdentity(z:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAbelian", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAbelian", "link" : "heavybool\/examples\/DynMagma.html#isAbelian():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAssociative", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isAssociative", "link" : "heavybool\/examples\/DynMagma.html#isAssociative():heavybool.HeavyBool", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): HeavyBool", "member" : "heavybool.Magma.isClosed", "link" : "heavybool\/examples\/DynMagma.html#isClosed():heavybool.HeavyBool", "kind" : "def"}, {"label" : "equiv", "tail" : "(a: T, b: T): HeavyBool", "member" : "heavybool.Magma.equiv", "link" : "heavybool\/examples\/DynMagma.html#equiv(a:T,b:T):heavybool.HeavyBool", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/examples\/DynMagma.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/examples\/DynMagma.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/examples\/DynMagma.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/examples\/DynMagma.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/examples\/DynMagma.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/examples\/DynMagma.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/examples\/DynMagma.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/examples\/DynMagma.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/examples\/DynMagma.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/examples\/DynMagma.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/examples\/DynMagma.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/examples\/DynMagma.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/examples\/DynMagma.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/examples\/DynMagma.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/examples\/DynMagma.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/examples\/DynMagma.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "heavybool\/examples\/DynMagma.html", "kind" : "case class"}, {"name" : "heavybool.examples.Relations", "shortDescription" : "", "object" : "heavybool\/examples\/Relations$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "heavybool.examples.Relations.main", "link" : "heavybool\/examples\/Relations$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "isStrictPartialOrder", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isStrictPartialOrder", "link" : "heavybool\/examples\/Relations$.html#isStrictPartialOrder[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isPartialOrder", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isPartialOrder", "link" : "heavybool\/examples\/Relations$.html#isPartialOrder[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isEquivalence", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isEquivalence", "link" : "heavybool\/examples\/Relations$.html#isEquivalence[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isTransitive", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isTransitive", "link" : "heavybool\/examples\/Relations$.html#isTransitive[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isStronglyConnected", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isStronglyConnected", "link" : "heavybool\/examples\/Relations$.html#isStronglyConnected[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isConnected", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isConnected", "link" : "heavybool\/examples\/Relations$.html#isConnected[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAntisymmetric", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isAntisymmetric", "link" : "heavybool\/examples\/Relations$.html#isAntisymmetric[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isAsymmetric", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isAsymmetric", "link" : "heavybool\/examples\/Relations$.html#isAsymmetric[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isSymmetric", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isSymmetric", "link" : "heavybool\/examples\/Relations$.html#isSymmetric[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isIrreflexive", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isIrreflexive", "link" : "heavybool\/examples\/Relations$.html#isIrreflexive[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "isReflexive", "tail" : "(gen: LazyList[T], rel: (T, T) => Boolean): HeavyBool", "member" : "heavybool.examples.Relations.isReflexive", "link" : "heavybool\/examples\/Relations$.html#isReflexive[T](gen:LazyList[T],rel:(T,T)=>Boolean):heavybool.HeavyBool", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "heavybool\/examples\/Relations$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "heavybool\/examples\/Relations$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "heavybool\/examples\/Relations$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "heavybool\/examples\/Relations$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "heavybool\/examples\/Relations$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "heavybool\/examples\/Relations$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "heavybool\/examples\/Relations$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/examples\/Relations$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/examples\/Relations$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "heavybool\/examples\/Relations$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "heavybool\/examples\/Relations$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "heavybool\/examples\/Relations$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "heavybool\/examples\/Relations$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "heavybool\/examples\/Relations$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "heavybool\/examples\/Relations$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "heavybool\/examples\/Relations$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "heavybool\/examples\/Relations$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "heavybool\/examples\/Relations$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "heavybool\/examples\/Relations$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};